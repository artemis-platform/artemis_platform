#!/usr/bin/env bash

set -a
source .env
set +a

if [ ! -z "$1" ]; then
  SPECIFIC_APP="$1"
fi

if [ ! -z "$2" ]; then
  SPECIFIC_TEST_PATH="$2"
fi

MIX_ENV=test
FAILURE_APPS=""
FAILURE_COUNT=0
SUCCESS_APPS=""

track_failure() {
  FAILURE_APPS+="${1} "
  FAILURE_COUNT=$[$FAILURE_COUNT + 1]
}

track_success() {
  SUCCESS_APPS+="${1} "
}

execute_tests_command() {
  APP=$1
  ADDITIONAL_FLAGS=$2

  mix cmd --app ${APP} mix test --color ${ADDITIONAL_FLAGS} ${SPECIFIC_TEST_PATH} && track_success ${APP} || track_failure ${APP}
}

execute_tests() {
  ADDITIONAL_FLAGS="${@}"

  if [ ! -z "${SPECIFIC_APP}" ]; then
    execute_tests_command ${SPECIFIC_APP} ${ADDITIONAL_FLAGS}
  else
    for directory in apps/*; do
      APP=$(echo $directory | awk -F '/' '{print $2}')

      execute_tests_command ${APP} ${ADDITIONAL_FLAGS}
    done
  fi
}

# Global Setup

mix ecto.create --quiet
mix ecto.migrate

# Iterate through apps and execute test suite

echo "==== Executing tests"
execute_tests

# Retry failed test suites

if [ $FAILURE_COUNT -gt 0 ] && [ -z "${SPECIFIC_TEST_PATH}" ]; then
  echo ""
  echo "==== FIRST RUN SUMMARY ===="
  echo "Success in: ${SUCCESS_APPS}"
  echo "Failures in: ${FAILURE_APPS}"
  echo "==========================="

  FAILURE_APPS=""
  FAILURE_COUNT=0
  SUCCESS_APPS=""

  execute_tests --failed --exclude cloudant_setup
fi

echo ""
echo "==== FINAL SUMMARY ===="
echo "Success in: ${SUCCESS_APPS}"
echo "Failures in: ${FAILURE_APPS}"
echo "======================="

# Exit

[ $FAILURE_COUNT -eq 0 ]
